<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HomeworkMapper">

    <resultMap type="Homework" id="HomeworkResult">
        <result property="homeworkId" column="homework_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="creatorId" column="creator_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="HomeworkHomeworkPublishResult" type="Homework" extends="HomeworkResult">
        <collection property="homeworkPublishList" ofType="HomeworkPublish" column="homework_id"
                    select="selectHomeworkPublishList"/>
    </resultMap>

    <resultMap type="HomeworkPublish" id="HomeworkPublishResult">
        <result property="publishId" column="publish_id"/>
        <result property="homeworkId" column="homework_id"/>
        <result property="homeworkTitle" column="homework_title"/>
        <result property="clazzId" column="clazz_id"/>
        <result property="clazzName" column="clazz_name"/>
        <result property="courseId" column="course_id"/>
        <result property="courseName" column="course_name"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="teacherName" column="teacher_name"/>
        <result property="deadline" column="deadline"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="selectHomeworkVo">
        select homework_id, title, content, creator_id, create_time, update_time from homework
    </sql>

    <select id="selectHomeworkList" parameterType="Homework" resultMap="HomeworkResult">
        <include refid="selectHomeworkVo"/>
        <where>
            <if test="title != null and title != ''"> and title like concat('%',#{title},'%')</if>
            <if test="creatorId != null"> and creator_id = #{creatorId}</if>
        </where>
    </select>

    <select id="selectHomeworkByHomeworkId" parameterType="Long" resultMap="HomeworkHomeworkPublishResult">
        select homework_id, title, content, creator_id, create_time, update_time
        from homework
        where homework_id = #{homeworkId}
    </select>

    <select id="selectHomeworkPublishList" resultMap="HomeworkPublishResult">
        select p.publish_id, p.homework_id, h.title as homework_title,
               p.clazz_id, c.clazz_name,
               p.course_id, co.course_name,
               p.teacher_id, t.teacher_name,
               p.deadline, p.create_time
        from homework_publish p
                 left join homework h on p.homework_id = h.homework_id
                 left join clazz c on p.clazz_id = c.clazz_id
                 left join course co on p.course_id = co.course_id
                 left join teacher t on p.teacher_id = t.teacher_id
        where p.homework_id = #{homework_id}
    </select>

    <insert id="insertHomework" parameterType="Homework" useGeneratedKeys="true" keyProperty="homeworkId">
        insert into homework(title, content, creator_id, create_time, update_time)
        values(#{title}, #{content}, #{creatorId}, now(), now())
    </insert>

    <update id="updateHomework" parameterType="Homework">
        update homework
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="creatorId != null">creator_id = #{creatorId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where homework_id = #{homeworkId}
    </update>

    <delete id="deleteHomeworkByHomeworkId" parameterType="Long">
        delete from homework where homework_id = #{homeworkId}
    </delete>

    <delete id="deleteHomeworkPublishByHomeworkId" parameterType="Long">
        delete from homework_publish where homework_id = #{homeworkId}
    </delete>

    <insert id="batchHomeworkPublish">
        insert into homework_publish(homework_id, clazz_id, course_id, teacher_id, deadline, create_time)
        values
        <foreach item="item" collection="list" separator=",">
            (#{item.homeworkId}, #{item.clazzId}, #{item.courseId}, #{item.teacherId}, #{item.deadline}, #{item.createTime})
        </foreach>
    </insert>

    <delete id="deleteHomeworkByHomeworkIds" parameterType="String">
        delete from homework where homework_id in
        <foreach item="homeworkId" collection="array" open="(" separator="," close=")"> #{homeworkId} </foreach>
    </delete>

    <delete id="deleteHomeworkPublishByHomeworkIds" parameterType="String">
        delete from homework_publish where homework_id in
        <foreach item="homeworkId" collection="array" open="(" separator="," close=")"> #{homeworkId} </foreach>
    </delete>


</mapper>
